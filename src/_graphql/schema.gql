# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ArticleContent {
  content: JSONObject
  posts: Post
  uuid_pid: ID!
}

input ArticleContentInput {
  content: JSONObject!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Like {
  posts: Post
  timestamp: DateTime
  users: User
  uuid_pid: ID!
  uuid_uid: ID!
}

type Mutation {
  create_user(userData: createUserInput!): User!
  update_user_info(userData: updateUserInput!): User!
  upsert_article_post(postData: upsertArticlePostInput!): upsertArticlePostOutput!
}

type Post {
  article_contents: ArticleContent
  content_type: Int
  deleted: Boolean
  likes: [Like!]
  likes_num: Int
  post_tags: [PostTag!]
  publish: Boolean
  source_contents: SourceContent
  timestamp: DateTime
  title: String
  top_image: String
  top_link: String
  users: User
  uuid_pid: ID!
  uuid_uid: String
}

type PostTag {
  posts: Post
  tags: Tag
  tid: Int!
  timestamp: DateTime
  uuid_pid: ID!
}

type Query {
  user(uid: String!): User
  users_all: [User]!
}

type SourceContent {
  description: JSONObject
  posts: Post
  source_link: String
  source_type: Int
  uuid_pid: ID!
}

type Tag {
  post_tags: [PostTag!]
  tag_content_num: Int
  tag_name: String
  tid: Int!
}

input TagInput {
  tag_name: String!
  tid: Int
}

type User {
  comment: String
  followee_num: Int
  follower_num: Int
  lang_type: Int
  likes: [Like!]
  posts: [Post!]
  uid: ID!
  uuid_uid: ID!
}

input createUserInput {
  lang_type: Int
  uid: ID!
  uuid_uid: ID!
}

input updateUserInput {
  comment: String
  lang_type: Int
  uid: ID!
  uuid_uid: ID!
}

input upsertArticlePostInput {
  articleContent: ArticleContentInput!
  content_type: Int!
  deleted: Boolean!
  publish: Boolean!
  tags: [TagInput]!
  title: String!
  top_image: String
  top_link: String
  uid: ID!
  uuid_pid: ID
  uuid_uid: ID!
}

type upsertArticlePostOutput {
  post: Post!
  tags: [Tag]!
}